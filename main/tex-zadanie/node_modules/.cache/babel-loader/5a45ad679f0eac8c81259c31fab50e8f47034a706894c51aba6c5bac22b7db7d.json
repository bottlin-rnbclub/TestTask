{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { searchRepos, getRepoDetails } from '../../api/github';\nconst initialState = {\n  repos: [],\n  status: 'idle',\n  selectedRepo: null\n};\nexport const fetchRepos = createAsyncThunk('repos/fetchRepos', async (query, {\n  rejectWithValue\n}) => {\n  try {\n    const data = await searchRepos(query);\n    return data.items;\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const fetchRepoDetails = createAsyncThunk('repos/fetchRepoDetails', async ({\n  owner,\n  repo\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const data = await getRepoDetails(owner, repo);\n    return data;\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nconst reposSlice = createSlice({\n  name: 'repos',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchRepos.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchRepos.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.repos = action.payload;\n    }).addCase(fetchRepos.rejected, state => {\n      state.status = 'failed';\n    }).addCase(fetchRepoDetails.fulfilled, (state, action) => {\n      state.selectedRepo = action.payload;\n    });\n  }\n});\nexport default reposSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","searchRepos","getRepoDetails","initialState","repos","status","selectedRepo","fetchRepos","query","rejectWithValue","data","items","error","fetchRepoDetails","owner","repo","reposSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["C:/Users/russi/OneDrive/Рабочий стол/tex/tex-zadanie/src/features/repos/reposSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\r\nimport { searchRepos, getRepoDetails } from '../../api/github';\r\nimport { RepoState, Repo } from '../../types';\r\n\r\nconst initialState: RepoState = {\r\n  repos: [],\r\n  status: 'idle',\r\n  selectedRepo: null,\r\n};\r\n\r\nexport const fetchRepos = createAsyncThunk<Repo[], string>(\r\n  'repos/fetchRepos',\r\n  async (query, { rejectWithValue }) => {\r\n    try {\r\n      const data = await searchRepos(query);\r\n      return data.items;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const fetchRepoDetails = createAsyncThunk<Repo, { owner: string; repo: string }>(\r\n  'repos/fetchRepoDetails',\r\n  async ({ owner, repo }, { rejectWithValue }) => {\r\n    try {\r\n      const data = await getRepoDetails(owner, repo);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nconst reposSlice = createSlice({\r\n  name: 'repos',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchRepos.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchRepos.fulfilled, (state, action: PayloadAction<Repo[]>) => {\r\n        state.status = 'idle';\r\n        state.repos = action.payload;\r\n      })\r\n      .addCase(fetchRepos.rejected, (state) => {\r\n        state.status = 'failed';\r\n      })\r\n      .addCase(fetchRepoDetails.fulfilled, (state, action: PayloadAction<Repo>) => {\r\n        state.selectedRepo = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default reposSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAuB,kBAAkB;AAC/E,SAASC,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAG9D,MAAMC,YAAuB,GAAG;EAC9BC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,MAAM;EACdC,YAAY,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGP,gBAAgB,CACxC,kBAAkB,EAClB,OAAOQ,KAAK,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACpC,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMT,WAAW,CAACO,KAAK,CAAC;IACrC,OAAOE,IAAI,CAACC,KAAK;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOH,eAAe,CAACG,KAAK,CAAC;EAC/B;AACF,CACF,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGb,gBAAgB,CAC9C,wBAAwB,EACxB,OAAO;EAAEc,KAAK;EAAEC;AAAK,CAAC,EAAE;EAAEN;AAAgB,CAAC,KAAK;EAC9C,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMR,cAAc,CAACY,KAAK,EAAEC,IAAI,CAAC;IAC9C,OAAOL,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAOH,eAAe,CAACG,KAAK,CAAC;EAC/B;AACF,CACF,CAAC;AAED,MAAMI,UAAU,GAAGjB,WAAW,CAAC;EAC7BkB,IAAI,EAAE,OAAO;EACbd,YAAY;EACZe,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACd,UAAU,CAACe,OAAO,EAAGC,KAAK,IAAK;MACtCA,KAAK,CAAClB,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDgB,OAAO,CAACd,UAAU,CAACiB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAA6B,KAAK;MACvEF,KAAK,CAAClB,MAAM,GAAG,MAAM;MACrBkB,KAAK,CAACnB,KAAK,GAAGqB,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDL,OAAO,CAACd,UAAU,CAACoB,QAAQ,EAAGJ,KAAK,IAAK;MACvCA,KAAK,CAAClB,MAAM,GAAG,QAAQ;IACzB,CAAC,CAAC,CACDgB,OAAO,CAACR,gBAAgB,CAACW,SAAS,EAAE,CAACD,KAAK,EAAEE,MAA2B,KAAK;MAC3EF,KAAK,CAACjB,YAAY,GAAGmB,MAAM,CAACC,OAAO;IACrC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeV,UAAU,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}