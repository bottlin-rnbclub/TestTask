{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\russi\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\tex\\\\tex-zadanie\\\\src\\\\components\\\\SearchBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAppDispatch } from '../store/hooks';\nimport { fetchRepos } from '../features/repos/reposSlice';\nimport { TextField, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const dispatch = useAppDispatch();\n  const handleSearch = () => {\n    dispatch(fetchRepos(query));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Search Repositories\",\n      variant: \"outlined\",\n      value: query,\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"xbAf6nF1VvfTszQLRFfJvX/0GO8=\", false, function () {\n  return [useAppDispatch];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useAppDispatch","fetchRepos","TextField","Button","jsxDEV","_jsxDEV","SearchBar","_s","query","setQuery","dispatch","handleSearch","children","label","variant","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/russi/OneDrive/Рабочий стол/tex/tex-zadanie/src/components/SearchBar.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useAppDispatch } from '../store/hooks';\r\nimport { fetchRepos } from '../features/repos/reposSlice';\r\nimport { TextField, Button } from '@mui/material';\r\n\r\nconst SearchBar: React.FC = () => {\r\n  const [query, setQuery] = useState('');\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleSearch = () => {\r\n    dispatch(fetchRepos(query));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TextField \r\n        label=\"Search Repositories\" \r\n        variant=\"outlined\" \r\n        value={query} \r\n        onChange={(e) => setQuery(e.target.value)} \r\n      />\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSearch}>\r\n        Search\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,UAAU,QAAQ,8BAA8B;AACzD,SAASC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMW,QAAQ,GAAGV,cAAc,CAAC,CAAC;EAEjC,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzBD,QAAQ,CAACT,UAAU,CAACO,KAAK,CAAC,CAAC;EAC7B,CAAC;EAED,oBACEH,OAAA;IAAAO,QAAA,gBACEP,OAAA,CAACH,SAAS;MACRW,KAAK,EAAC,qBAAqB;MAC3BC,OAAO,EAAC,UAAU;MAClBC,KAAK,EAAEP,KAAM;MACbQ,QAAQ,EAAGC,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFjB,OAAA,CAACF,MAAM;MAACW,OAAO,EAAC,WAAW;MAACS,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEb,YAAa;MAAAC,QAAA,EAAC;IAEnE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACf,EAAA,CArBID,SAAmB;EAAA,QAENN,cAAc;AAAA;AAAAyB,EAAA,GAF3BnB,SAAmB;AAuBzB,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}